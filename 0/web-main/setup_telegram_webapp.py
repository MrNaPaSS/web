#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram Web App
"""

import subprocess
import time
import json
import requests
import threading
from telegram import Bot
from telegram_bot import TelegramSignalBot
from config import BotConfig

class TelegramWebAppSetup:
    def __init__(self):
        self.bot_token = BotConfig.BOT_TOKEN
        self.bot = Bot(self.bot_token)
        
    def start_ngrok_tunnel(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç ngrok —Ç—É–Ω–Ω–µ–ª—å –¥–ª—è frontend"""
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º ngrok –¥–ª—è –ø–æ—Ä—Ç–∞ 3001 (frontend)
            ngrok_process = subprocess.Popen([
                'ngrok', 'http', '3001', '--log=stdout'
            ], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
            
            # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ ngrok
            time.sleep(3)
            
            # –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL
            try:
                response = requests.get('http://localhost:4040/api/tunnels')
                tunnels = response.json()['tunnels']
                
                for tunnel in tunnels:
                    if tunnel['proto'] == 'https':
                        public_url = tunnel['public_url']
                        print(f"‚úÖ Ngrok —Ç—É–Ω–Ω–µ–ª—å –∑–∞–ø—É—â–µ–Ω: {public_url}")
                        return public_url
                        
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è ngrok URL: {e}")
                return None
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ ngrok: {e}")
            return None
    
    def update_bot_webapp_url(self, webapp_url):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç URL Web App –≤ –∫–æ–¥–µ –±–æ—Ç–∞"""
        try:
            # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª telegram_bot.py
            with open('telegram_bot.py', 'r', encoding='utf-8') as f:
                content = f.read()
            
            # –ó–∞–º–µ–Ω—è–µ–º URL
            old_url = 'self.web_app_url = "https://your-domain.com"'
            new_url = f'self.web_app_url = "{webapp_url}"'
            content = content.replace(old_url, new_url)
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
            with open('telegram_bot.py', 'w', encoding='utf-8') as f:
                f.write(content)
                
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω Web App URL –≤ –±–æ—Ç–µ: {webapp_url}")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è URL –≤ –±–æ—Ç–µ: {e}")
            return False
    
    def set_bot_commands(self):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞"""
        try:
            commands = [
                {"command": "start", "description": "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"},
                {"command": "help", "description": "‚ùì –ü–æ–º–æ—â—å"},
                {"command": "webapp", "description": "üåê –û—Ç–∫—Ä—ã—Ç—å Web App"},
                {"command": "market", "description": "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ä—ã–Ω–∫–∞"},
            ]
            
            self.bot.set_my_commands(commands)
            print("‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥: {e}")
            return False
    
    def test_webapp_connection(self, webapp_url):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Web App"""
        try:
            response = requests.get(webapp_url, timeout=10)
            if response.status_code == 200:
                print("‚úÖ Web App –¥–æ—Å—Ç—É–ø–µ–Ω")
                return True
            else:
                print(f"‚ùå Web App –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Web App: {e}")
            return False

def main():
    print("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram Web App...")
    
    setup = TelegramWebAppSetup()
    
    # 1. –ó–∞–ø—É—Å–∫–∞–µ–º ngrok —Ç—É–Ω–Ω–µ–ª—å
    print("\n–ó–∞–ø—É—Å–∫ ngrok —Ç—É–Ω–Ω–µ–ª—è...")
    webapp_url = setup.start_ngrok_tunnel()
    
    if not webapp_url:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å ngrok —Ç—É–Ω–Ω–µ–ª—å")
        return
    
    # 2. –û–±–Ω–æ–≤–ª—è–µ–º URL –≤ –±–æ—Ç–µ
    print(f"\n–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ URL –≤ –±–æ—Ç–µ...")
    if not setup.update_bot_webapp_url(webapp_url):
        return
    
    # 3. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
    print(f"\n–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞...")
    if not setup.set_bot_commands():
        return
    
    # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    print(f"\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Web App...")
    if not setup.test_webapp_connection(webapp_url):
        return
    
    print(f"\nTelegram Web App –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    print(f"Web App URL: {webapp_url}")
    print(f"–¢–µ–ø–µ—Ä—å –≤ –±–æ—Ç–µ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ Web App")
    print(f"\n–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
    print(f"1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –±–æ—Ç–∞")
    print(f"2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É Web App")
    print(f"3. Web App –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –ø—Ä—è–º–æ –≤ Telegram")

if __name__ == "__main__":
    main()
