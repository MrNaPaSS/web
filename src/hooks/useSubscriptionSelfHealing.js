/**
 * –•—É–∫ –¥–ª—è "—Å–∞–º–æ–ª–µ—á–µ–Ω–∏—è" –ø–æ–¥–ø–∏—Å–æ–∫
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–æ–∫ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ –≤ —Å–µ—Ç—å
 */
import { useEffect, useCallback } from 'react'
import apiClient from '../services/apiClient'

export const useSubscriptionSelfHealing = (setUserSubscriptions, showNotification) => {
  
  /**
   * –§—É–Ω–∫—Ü–∏—è –¥–ª—è "—Ç–∏—Ö–æ–π" –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫
   */
  const fetchMySubscriptions = useCallback(async () => {
    try {
      console.log('üîÑ Re-syncing subscriptions...')
      
      const subscriptions = await apiClient.getMySubscriptions()
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–µ–π—Ç –ø–æ–¥–ø–∏—Å–æ–∫
      setUserSubscriptions(subscriptions)
      
      console.log('‚úÖ Subscriptions re-synced:', subscriptions)
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      if (showNotification) {
        showNotification({
          type: 'info',
          message: '–ü–æ–¥–ø–∏—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º'
        })
      }
      
    } catch (error) {
      console.error('‚ùå Failed to re-sync subscriptions:', error)
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      if (showNotification) {
        showNotification({
          type: 'error',
          message: '–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–æ–∫'
        })
      }
    }
  }, [setUserSubscriptions, showNotification])

  useEffect(() => {
    // 1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—É–ª—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É
    const handleVisibilityChange = () => {
      if (document.visibilityState === 'visible') {
        console.log('üëÅÔ∏è Tab became visible, re-syncing subscriptions...')
        fetchMySubscriptions()
      }
    }

    // 2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    const handleOnline = () => {
      console.log('üåê Network connection restored, re-syncing subscriptions...')
      fetchMySubscriptions()
    }

    // 3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—É–ª—Å—è –∏–∑ —Å–ø—è—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ (focus –Ω–∞ –æ–∫–Ω–µ)
    const handleFocus = () => {
      console.log('üéØ Window focused, re-syncing subscriptions...')
      fetchMySubscriptions()
    }

    // 4. –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)
    const intervalId = setInterval(() => {
      console.log('‚è∞ Periodic subscription check...')
      fetchMySubscriptions()
    }, 5 * 60 * 1000) // 5 –º–∏–Ω—É—Ç

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π
    document.addEventListener('visibilitychange', handleVisibilityChange)
    window.addEventListener('online', handleOnline)
    window.addEventListener('focus', handleFocus)

    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      document.removeEventListener('visibilitychange', handleVisibilityChange)
      window.removeEventListener('online', handleOnline)
      window.removeEventListener('focus', handleFocus)
      clearInterval(intervalId)
    }
  }, [fetchMySubscriptions])

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä—É—á–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  return {
    reSyncSubscriptions: fetchMySubscriptions
  }
}

export default useSubscriptionSelfHealing
