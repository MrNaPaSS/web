import React, { lazy, Suspense, useEffect } from 'react'
import { QueryClient, QueryClientProvider } from '@tanstack/react-query'
import { useAuthStore } from '@/store/useAuthStore'
import { useUIStore } from '@/store/useUIStore'
import { useSignalStore } from '@/store/useSignalStore'
import { TelegramAuth } from '@/components/TelegramAuth'

// Code splitting –¥–ª—è —ç–∫—Ä–∞–Ω–æ–≤
const WelcomeScreen = lazy(() => import('@/screens/WelcomeScreen'))
const MenuScreen = lazy(() => import('@/screens/MenuScreen'))
const SettingsScreen = lazy(() => import('@/screens/SettingsScreen'))
const MainScreen = lazy(() => import('@/screens/MainScreen'))

// Loading –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
const LoadingSpinner = () => (
  <div className="min-h-screen bg-gradient-to-br from-slate-950 via-blue-950 to-slate-950 flex items-center justify-center">
    <div className="text-white">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
  </div>
)

const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      refetchOnWindowFocus: false,
      retry: 1,
      staleTime: 30000
    }
  }
})

function App() {
  const { isAuthorized, setAuth, userId, isHydrated } = useAuthStore()
  const { currentScreen, navigateTo } = useUIStore()
  const { activeSignals } = useSignalStore()
  
  // –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ
  const pendingSignal = localStorage.getItem('pendingSignal')
  if (pendingSignal && currentScreen !== 'main') {
    console.log('üö® [FORCE] –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ main —ç–∫—Ä–∞–Ω –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞')
    navigateTo('main')
  }
  
  // –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤
  const t = (key, params = {}) => {
    const translations = {
      welcome: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
      loadingInterface: '–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...',
      loginError: '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞',
      tryAgain: '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞'
    }
    return translations[key] || key
  }
  
  const handleAuthSuccess = (authData) => {
    setAuth(authData)
    // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ welcome —ç–∫—Ä–∞–Ω
    navigateTo('welcome')
  }
  
  const handleAuthError = (error) => {
    console.error('Auth error:', error)
  }
  
  // –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Å–∏–≥–Ω–∞–ª –°–†–ê–ó–£ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    console.log('üîç [INIT] –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Å–∏–≥–Ω–∞–ª –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ...')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Å–∏–≥–Ω–∞–ª –ù–ï–ó–ê–í–ò–°–ò–ú–û –æ—Ç –≤—Å–µ–≥–æ
    const pendingSignal = localStorage.getItem('pendingSignal')
    if (pendingSignal) {
      try {
        const signal = JSON.parse(pendingSignal)
        console.log('‚úÖ [INIT] –ù–∞–π–¥–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π —Å–∏–≥–Ω–∞–ª:', signal)
        
        // –°–†–ê–ó–£ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ main —ç–∫—Ä–∞–Ω, –Ω–µ –ø—Ä–æ–≤–µ—Ä—è—è –≤—Ä–µ–º—è
        console.log('üöÄ [INIT] –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ main —ç–∫—Ä–∞–Ω –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞')
        navigateTo('main')
        return
      } catch (error) {
        console.warn('‚ùå [INIT] –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞:', error)
        localStorage.removeItem('pendingSignal')
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞
    const authData = localStorage.getItem('auth-storage')
    if (authData) {
      try {
        const parsed = JSON.parse(authData)
        if (parsed.state?.isAuthorized && parsed.state?.userId) {
          console.log('‚úÖ [INIT] –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑ localStorage')
          if (currentScreen === 'auth') {
            navigateTo('welcome')
          }
        }
      } catch (error) {
        console.warn('‚ùå [INIT] –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è:', error)
      }
    }
  }, []) // –£–±–∏—Ä–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, —á—Ç–æ–±—ã —Å—Ä–∞–±–æ—Ç–∞–ª–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ Zustand store
  useEffect(() => {
    if (isHydrated && isAuthorized) {
      console.log('‚úÖ [HYDRATED] Zustand store –∑–∞–≥—Ä—É–∂–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Å–∏–≥–Ω–∞–ª')
      const pendingSignal = localStorage.getItem('pendingSignal')
      if (pendingSignal && currentScreen !== 'main') {
        console.log('üöÄ [HYDRATED] –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ main —ç–∫—Ä–∞–Ω –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞')
        navigateTo('main')
      }
    }
  }, [isHydrated, isAuthorized, navigateTo, currentScreen])
  
  // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ Zustand store
  if (!isHydrated) {
    return <LoadingSpinner />
  }
  
  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –Ω–æ –≤—Å–µ –µ—â–µ –Ω–∞ auth —ç–∫—Ä–∞–Ω–µ, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ welcome
  if (isAuthorized && currentScreen === 'auth') {
    navigateTo('welcome')
  }
  
  if (!isAuthorized) {
    return <TelegramAuth onAuthSuccess={handleAuthSuccess} onAuthError={handleAuthError} t={t} />
  }
  
  return (
    <QueryClientProvider client={queryClient}>
      <Suspense fallback={<LoadingSpinner />}>
        {currentScreen === 'welcome' && <WelcomeScreen />}
        {currentScreen === 'menu' && <MenuScreen />}
        {currentScreen === 'settings' && <SettingsScreen />}
        {currentScreen === 'main' && <MainScreen />}
      </Suspense>
    </QueryClientProvider>
  )
}

export default App