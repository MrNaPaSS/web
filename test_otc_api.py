#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç OTC –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ API
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from powerful_otc_generator import PowerfulOTCGenerator

async def test_otc_api():
    """–¢–µ—Å—Ç OTC –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ API"""
    try:
        print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OTC –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞...")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
        generator = PowerfulOTCGenerator()
        
        if not generator.analyzer_available:
            print("‚ùå –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return False
            
        print("‚úÖ OTC –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å–∏–≥–Ω–∞–ª–∞
        test_pair = "EUR/USD (OTC)"
        signal = await generator.generate_powerful_otc_signal(test_pair)
        
        if signal:
            print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å–∏–≥–Ω–∞–ª:")
            print(f"   –ü–∞—Ä–∞: {signal.pair}")
            print(f"   –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {signal.direction}")
            print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {signal.confidence:.2f}")
            print(f"   –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: {signal.entry_price:.5f}")
            print(f"   –¢—Ä–µ–Ω–¥: {signal.trend}")
            return True
        else:
            print("‚ö†Ô∏è –°–∏–≥–Ω–∞–ª –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    result = asyncio.run(test_otc_api())
    if result:
        print("üéâ OTC –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    else:
        print("üí• OTC –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
