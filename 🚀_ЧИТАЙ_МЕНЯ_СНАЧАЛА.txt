═══════════════════════════════════════════════════════════════════
   🚀 БЫСТРЫЙ ЗАПУСК TELEGRAM БОТА + ВЕБА 🚀
═══════════════════════════════════════════════════════════════════

ПОШАГОВАЯ ИНСТРУКЦИЯ:

═══════════════════════════════════════════════════════════════════
ШАГ 1: УСТАНОВКА ЗАВИСИМОСТЕЙ (ОДИН РАЗ)
═══════════════════════════════════════════════════════════════════

Запусти файл: 🔧_УСТАНОВКА_ЗАВИСИМОСТЕЙ.bat

Этот файл установит все необходимые Python и Node.js пакеты.

═══════════════════════════════════════════════════════════════════
ШАГ 2: ЗАПУСК ВСЕЙ СИСТЕМЫ
═══════════════════════════════════════════════════════════════════

Запусти файл: 🚀_ЗАПУСК_СИСТЕМЫ.bat

Откроется 4 окна консоли:
1. Telegram Bot (бот с сигналами)
2. Auth API (порт 5001)
3. Signal API (порт 5002)
4. Frontend WebApp (порт 5173)

НЕ ЗАКРЫВАЙ эти окна - система работает!

═══════════════════════════════════════════════════════════════════
ШАГ 3: ОТКРОЙ ВЕБ-ПРИЛОЖЕНИЕ
═══════════════════════════════════════════════════════════════════

В браузере открой: http://localhost:5173

Веб-интерфейс готов к работе!

═══════════════════════════════════════════════════════════════════
ШАГ 4: TELEGRAM BOT
═══════════════════════════════════════════════════════════════════

Найди своего бота в Telegram и используй:
/start - запуск бота
/help - помощь

═══════════════════════════════════════════════════════════════════
ОСТАНОВКА СИСТЕМЫ
═══════════════════════════════════════════════════════════════════

Запусти файл: 🛑_ОСТАНОВКА_СИСТЕМЫ.bat

Все сервисы будут остановлены.

═══════════════════════════════════════════════════════════════════
ПРОВЕРКА СТАТУСА
═══════════════════════════════════════════════════════════════════

Запусти файл: 📊_ПРОВЕРКА_СТАТУСА.bat

Проверит наличие Python, Node.js, запущенные процессы и порты.

═══════════════════════════════════════════════════════════════════
ВАЖНЫЕ ФАЙЛЫ КОНФИГУРАЦИИ
═══════════════════════════════════════════════════════════════════

1. config.py
   - BOT_TOKEN (токен telegram бота)
   - TWELVEDATA_API_KEY (ключ API для форекс данных)
   - AUTHORIZED_USERS (ID пользователей)
   - ADMIN_ID (ID админа)

2. home\ubuntu\forex-signals-app\backend\auth_api.py
   - BOT_TOKEN (строка 14)
   - ADMIN_TELEGRAM_ID (строка 15)
   - BOT_DIR (строка 13)

3. home\ubuntu\forex-signals-app\backend\signal_api.py
   - BOT_DIR (строка 13)

4. home\ubuntu\forex-signals-app\src\App.jsx
   - ADMIN_TELEGRAM_ID (строка 12)

═══════════════════════════════════════════════════════════════════
СТРУКТУРА СИСТЕМЫ
═══════════════════════════════════════════════════════════════════

Telegram Bot (run_telegram_bot.py)
    │
    ├─► Backend API:
    │     ├─ Auth API (5001) - авторизация пользователей
    │     └─ Signal API (5002) - генерация сигналов
    │
    └─► Frontend (5173) - веб-интерфейс React

═══════════════════════════════════════════════════════════════════
ЕСЛИ ЧТО-ТО НЕ РАБОТАЕТ
═══════════════════════════════════════════════════════════════════

1. Проверь наличие Python 3.8+ и Node.js 16+
2. Установи зависимости: 🔧_УСТАНОВКА_ЗАВИСИМОСТЕЙ.bat
3. Проверь статус: 📊_ПРОВЕРКА_СТАТУСА.bat
4. Останови систему: 🛑_ОСТАНОВКА_СИСТЕМЫ.bat
5. Запусти снова: 🚀_ЗАПУСК_СИСТЕМЫ.bat

═══════════════════════════════════════════════════════════════════
PRODUCTION (ДЛЯ РЕАЛЬНОГО ИСПОЛЬЗОВАНИЯ)
═══════════════════════════════════════════════════════════════════

Для работы Telegram WebApp нужен HTTPS туннель:

1. Cloudflare Tunnel:
   cloudflared tunnel --url http://localhost:5173

2. ngrok:
   ngrok http 5173

3. Получи HTTPS URL и настрой в боте

Подробнее: 📖_ИНСТРУКЦИЯ_ЗАПУСКА.md

═══════════════════════════════════════════════════════════════════

Версия: 1.0
Дата: 2025-01-14

═══════════════════════════════════════════════════════════════════

