#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Telegram –±–æ—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
"""

import os
from datetime import datetime
from typing import Set

class BotConfig:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –±–æ—Ç–∞"""
    
    # Telegram Bot Token (—Å–∏–≥–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç) - –¢–ï–°–¢–û–í–´–ô
    BOT_TOKEN = "8365963410:AAFVnrFboehOUxWmkeivDVvC4nft_hjjcCQ"
    TELEGRAM_BOT_TOKEN = BOT_TOKEN  # –ê–ª–∏–∞—Å –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    
    # Twelvedata API Keys (—Ä–æ—Ç–∞—Ü–∏—è –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤)
    TWELVEDATA_API_KEYS = [
        "db0b6170bf88422890f72d31cde96d73",  # –ù–æ–≤—ã–π –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª—é—á
        "135a5040fb4642d6be0dda33fdf12232",  # –ó–∞–ø–∞—Å–Ω–æ–π –∫–ª—é—á 1
        "d31clt1r01qsprr0c0lgd31clt1r01qsprr0c0m0",  # –ó–∞–ø–∞—Å–Ω–æ–π –∫–ª—é—á 2
        "your_backup_key_3",  # –ó–∞–ø–∞—Å–Ω–æ–π –∫–ª—é—á 3 (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
    ]
    TWELVEDATA_API_KEY = TWELVEDATA_API_KEYS[0]  # –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª—é—á –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    
    # –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (ID –∏–∑ Telegram)
    AUTHORIZED_USERS: Set[int] = {
        511442168,   # –í–∞—à ID (–∞–¥–º–∏–Ω)
    }
    
    # ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–µ–Ω —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã)
    ADMIN_ID = 511442168
    ADMIN_TELEGRAM_ID = ADMIN_ID  # –ê–ª–∏–∞—Å –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
    SIGNAL_SETTINGS = {
        "min_confidence": 0.5,  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–∏–≥–Ω–∞–ª–∞
        "cache_duration": 0,    # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –û–¢–ö–õ–Æ–ß–ï–ù–û - –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥—ã–π —Ä–∞–∑
        "request_delay": 2.0,   # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (—É–≤–µ–ª–∏—á–µ–Ω–æ)
        "max_bulk_pairs": 3,    # –ú–∞–∫—Å–∏–º—É–º –ø–∞—Ä –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (—É–º–µ–Ω—å—à–µ–Ω–æ)
        "signal_cooldown": 30,  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –≥–µ–Ω–µ—Ä–∞—Ü–∏—è–º–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ (30 —Å–µ–∫—É–Ω–¥)
        "bulk_signal_cooldown": 240, # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –¢–û–ü-3 —Å–∏–≥–Ω–∞–ª–æ–≤ (4 –º–∏–Ω—É—Ç—ã)
        "api_optimization": True, # –í–∫–ª—é—á–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é API –∑–∞–ø—Ä–æ—Å–æ–≤
        "lite_mode": False,     # –û–±–ª–µ–≥—á–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º –û–¢–ö–õ–Æ–ß–ï–ù - –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    }
    
    # 6 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–æ—Ä–µ–∫—Å –ø–∞—Ä –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    MAJOR_FOREX_PAIRS = [
        "EUR/USD", "GBP/USD", "USD/JPY", 
        "USD/CHF", "AUD/USD", "USD/CAD"
    ]
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    DISPLAY_SETTINGS = {
        "show_detailed_indicators": True,
        "show_confidence_bar": True,
        "show_interpretation": True,
        "timezone": "Europe/Berlin",  # –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
    }
    
    # –°–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
    MESSAGES = {
        "welcome": (
            "üöÄ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤!</b>\n\n"
            "üîπ <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
            "‚Ä¢ üí± –§–æ—Ä–µ–∫—Å —Å–∏–≥–Ω–∞–ª—ã (–ü–Ω-–ü—Ç, 06:00-22:00 CET/CEST)\n"
            "‚Ä¢ ‚ö° –û–¢–° —Å–∏–≥–Ω–∞–ª—ã (–∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ 24/7)\n" 
            "‚Ä¢ üìà –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏\n"
            "‚Ä¢ üéØ –°–∏—Å—Ç–µ–º–∞ —Å–∫–æ—Ä–∏–Ω–≥–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Å–∏–≥–Ω–∞–ª–æ–≤\n"
            "‚Ä¢ üåê –†–µ–∞–ª—å–Ω—ã–µ —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n\n"
            "üëá <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç–æ—Ä–≥–æ–≤–ª–∏:</b>"
        ),
        
        "help": (
            "‚ùì <b>–ü–û–ú–û–©–¨</b>\n\n"
            "ü§ñ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
            "‚Ä¢ /start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
            "‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å\n"
            "‚Ä¢ /market - –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ä—ã–Ω–∫–∞\n\n"
            "üìä <b>–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:</b>\n"
            "‚Ä¢ üí± <b>–§–æ—Ä–µ–∫—Å —Å–∏–≥–Ω–∞–ª—ã</b> - –†–∞–±–æ—Ç–∞—é—Ç –≤ —á–∞—Å—ã —Ç–æ—Ä–≥–æ–≤ (–ü–Ω-–ü—Ç, 06:00-22:00 CET/CEST)\n"
            "‚Ä¢ ‚ö° <b>–û–¢–° —Å–∏–≥–Ω–∞–ª—ã</b> - –†–∞–±–æ—Ç–∞—é—Ç –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ 24/7\n"
            "‚Ä¢ üìà <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑</b> - RSI, EMA, MACD, Bollinger Bands\n"
            "‚Ä¢ üéØ <b>–°–∏—Å—Ç–µ–º–∞ —Å–∫–æ—Ä–∏–Ω–≥–∞</b> - –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Å–∏–≥–Ω–∞–ª–æ–≤\n\n"
            "üí° <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>\n"
            "1. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç–æ—Ä–≥–æ–≤–ª–∏ (–§–æ—Ä–µ–∫—Å –∏–ª–∏ –û–¢–°)\n"
            "2. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –º–µ–Ω—é\n"
            "3. –ü–æ–ª—É—á–∏—Ç–µ —Å–∏–≥–Ω–∞–ª —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º\n\n"
            "üìû <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> @kaktotakxm\n"
            "üîí <b>–î–æ—Å—Ç—É–ø:</b> –¢–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        ),
        
        "market_schedule": (
            "üìÖ <b>–†–ê–°–ü–ò–°–ê–ù–ò–ï –†–ê–ë–û–¢–´ –†–´–ù–ö–û–í</b>\n\n"
            "üí± <b>–§–û–†–ï–ö–° (Forex):</b>\n"
            "üïï <b>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</b> –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞\n"
            "‚è∞ <b>–ß–∞—Å—ã:</b> 06:00 - 22:00 (CET/CEST)\n"
            "üåç <b>–ü–∞—Ä—ã:</b> EUR/USD, GBP/USD, USD/JPY, USD/CHF, AUD/USD, USD/CAD\n\n"
            "‚ö° <b>–û–¢–° (Over-The-Counter):</b>\n"
            "üïê <b>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</b> –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ 24/7\n"
            "üìÖ <b>–î–Ω–∏:</b> –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ\n"
            "üåê <b>–ü–∞—Ä—ã:</b> –¢–µ –∂–µ 6 –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞—Ä –≤ –û–¢–° —Ä–µ–∂–∏–º–µ\n\n"
            "üí° <b>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</b>\n"
            "‚Ä¢ –í —á–∞—Å—ã —Ä–∞–±–æ—Ç—ã —Ñ–æ—Ä–µ–∫—Å–∞ - —Ä–µ–∞–ª—å–Ω—ã–µ —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n"
            "‚Ä¢ –í–Ω–µ —á–∞—Å–æ–≤ —Ñ–æ—Ä–µ–∫—Å–∞ - –¥–µ–º–æ-—Ä–µ–∂–∏–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n"
            "‚Ä¢ –û–¢–° –ø–∞—Ä—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞—é—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"
        ),
        
        "unauthorized": (
            "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.\n"
            "üìû –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å: @kaktotakxm"
        ),
        
        "no_signals": (
            "‚ö†Ô∏è <b>–°–∏–≥–Ω–∞–ª—ã –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã</b>\n\n"
            "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
            "‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –æ—Ç API\n"
            "‚Ä¢ –ù–∏–∑–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–∏–≥–Ω–∞–ª–∞—Ö\n"
            "‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã."
        ),
        
        "error_general": (
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        ),
        
        "generating_signal": (
            "‚è≥ <b>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è {}...</b>\n\n"
            "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã..."
        ),
        
        "generating_bulk": (
            "‚è≥ <b>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–∞—Ä...</b>\n\n"
            "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ..."
        ),
        
        "risk_warning": (
            "‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –°–∏–≥–Ω–∞–ª—ã –Ω–æ—Å—è—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä. "
            "–í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞–º–∏ –ø—Ä–∏ —Ç–æ—Ä–≥–æ–≤–ª–µ."
        )
    }
    
    @classmethod
    def load_from_env(cls):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
        cls.BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN", cls.BOT_TOKEN)
        cls.TWELVEDATA_API_KEY = os.getenv("TWELVEDATA_API_KEY", cls.TWELVEDATA_API_KEY)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
        env_users = os.getenv("AUTHORIZED_USERS", "")
        if env_users:
            try:
                user_ids = [int(uid.strip()) for uid in env_users.split(",") if uid.strip()]
                cls.AUTHORIZED_USERS.update(user_ids)
            except ValueError:
                print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ AUTHORIZED_USERS –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    
    @classmethod
    def add_authorized_user(cls, user_id: int):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        cls.AUTHORIZED_USERS.add(user_id)
        cls._save_authorized_users()
    
    @classmethod
    def remove_authorized_user(cls, user_id: int):
        """–£–¥–∞–ª—è–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        cls.AUTHORIZED_USERS.discard(user_id)
        cls._save_authorized_users()
    
    @classmethod
    def _save_authorized_users(cls):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª"""
        try:
            import json
            users_file = "authorized_users.json"
            data = {
                'authorized_users': list(cls.AUTHORIZED_USERS),
                'last_updated': str(datetime.now())
            }
            with open(users_file, 'w', encoding='utf-8') as f:
                json.dump(data, f, ensure_ascii=False, indent=2)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
    
    @classmethod
    def _load_authorized_users(cls):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞"""
        try:
            import json
            users_file = "authorized_users.json"
            if os.path.exists(users_file):
                with open(users_file, 'r', encoding='utf-8') as f:
                    data = json.load(f)
                    saved_users = data.get('authorized_users', [])
                    # –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                    cls.AUTHORIZED_USERS.clear()
                    cls.AUTHORIZED_USERS.update(saved_users)
                    if len(saved_users) > 0:
                        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(saved_users)} –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
    
    @classmethod
    def is_user_authorized(cls, user_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"""
        return user_id in cls.AUTHORIZED_USERS


# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
BotConfig.load_from_env()
